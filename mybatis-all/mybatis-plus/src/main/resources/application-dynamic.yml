#mybatisplus 多数据源dynamic,提供并简化对Druid等的快速集成（内置druid，但pom也需要配置druid，默认使用druid连接池，也可配置使用其它如Hikari,但需要在pom中注调druid相关依赖）
    #当自定义数据源时：
        #pom中若添加了druid-spring-boot-starter依赖，则需要在启动类排除，没加则需要排除pring Boot 2.0以上默认连接池hikari @SpringBootApplication(exclude = DataSourceAutoConfiguration.class)，排除后下面的hikari才会生效
        #(因为我们使用的是阿里数据库连接池 Druid，需要排除原生 Druid 的快速配置类，否则会导致配置类在原始的配置文件中寻找数据库的配置属性，从而导致项目无法启动。@SpringBootApplication(exclude = DruidDataSourceAutoConfigure.class))
    #支持 数据源分组 ，适用于多种场景 纯粹多库 读写分离 一主多从 混合模式。
    #支持无数据源启动，支持配置懒启动数据源(3.3.2+)。
    #支持数据库敏感配置信息 加密 ENC()。
    #支持每个数据库独立初始化表结构schema和数据库database。
    #支持 自定义注解 ，需继承DS(3.2.0+)。
    #提供对Druid，Mybatis-Plus，P6sy，Jndi的快速集成。
    #简化Druid和HikariCp配置，提供 全局参数配置 。配置一次，全局通用。
    #提供 自定义数据源来源 方案。
    #提供项目启动后 动态增加移除数据源 方案。
    #提供Mybatis环境下的 纯读写分离 方案。
    #提供使用 spel动态参数 解析数据源方案。内置spel，session，header，支持自定义。
    #支持 多层数据源嵌套切换 。（ServiceA >>> ServiceB >>> ServiceC）。
    #提供对shiro，sharding-jdbc,quartz等第三方库集成的方案,注意事项和示例。
    #提供 基于seata的分布式事务方案。 附：不支持原生spring事务。
    #提供 本地多数据源事务方案。 附：不支持原生spring事务(3.3.1+)。
#Spring Boot 2.0 以上默认使用 com.zaxxer.hikari.HikariDataSource 数据源,可以 通过 spring.datasource.type 指定数据源
spring:
  datasource:
    #Spring Boot 2.0以上默认连接池hikari
    hikari:
      #池中维护的最小空闲连接数（minIdle<0或者minIdle>maxPoolSize,则被重置为maxPoolSize）
      minimum-idle: 4
      #池中最大连接数，包括闲置和使用中的连接。（如果maxPoolSize小于1，则会被重置。当minIdle<=0被重置为DEFAULT_POOL_SIZE则为10;如果minIdle>0则重置为minIdle的值）
      maximum-pool-size: 16
      #等待来自池的连接的最大毫秒数,如果小于250毫秒，则被重置回30秒
      connection-timeout: 10000
      #连接允许在池中闲置的最长时间（如果idleTimeout+1秒>maxLifetime 且 maxLifetime>0，则会被重置为0（代表永远不会退出）；如果idleTimeout!=0且小于10秒，则会被重置为10秒）
      idle-timeout: 10000
      connection-init-sql: set names utf8mb4
      #池中连接最长生命周期(如果不等于0且小于30秒则会被重置回30分钟)
      max-lifetime: 100000
    dynamic:
      # 设置默认的数据源或数据源组，默认值即为master
      primary: master
      # 严格匹配数据源，默认false，true未匹配到指定数据源时抛异常，false使用默认数据源
      strict: false
      datasource:
        master:
          driverClassName: com.mysql.cj.jdbc.Driver
          # 连接url常用参数：
          # useUnicode：是否使用编码集。
          # characterEncoding：utf8、gbk等，设置字符集编码类型。
          # zeroDateTimeBehavior：convertToNull，datetime的字段值全部为0时的处理方式。
          # useSSL：是否使用SSL协议。（true 可以连接高版本的数据库）
          # serverTimezone：时区。
          # autoReconnect：当数据库连接异常中断时，是否自动重新连接
          # autoReconnectForPools：是否使用针对数据库连接池的重连策略
          # failOverReadOnly：自动重连成功后，连接是否设置为只读
          url: jdbc:mysql://localhost:3306/devs?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC&useSSL=false&serverTimezone=GMT%2B8&autoReconnect=true&failOverReadOnly=false
          username: root
          password: Liusiyuan1
        prod:
          driverClassName: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://localhost:3306/prod?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC&useSSL=false&serverTimezone=GMT%2B8&autoReconnect=true&failOverReadOnly=false
          username: root
          password: Liusiyuan1

