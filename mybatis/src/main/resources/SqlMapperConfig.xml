<?xml version="1.0" encoding="UTF-8"?>

<!--可下载查看mybatis的dtd规范，规定了标签的顺序和可用标签-->
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">

<!--首先加载核心配置文件-->
<configuration>

    <!--定义全局属性，更加解耦，下面可引用-->
    <!--方法传递优先级<resource属性读取类路径下属性文件<properties元素中指定的属性-->
    <properties resource="jdbc.properties">
        <!--开启默认值配置-->
        <property name="org.apache.ibatis.parsing.PropertyParser.enable-default-value" value="true"/>
    </properties>

    <settings>
        <!--打开延迟加载的开关,参考LazyTest类-->
        <setting name="lazyLoadingEnabled" value="false"/>
        <!--将积极加载改为消极加载 即 按需加载(应用于多表关联场景)   3.4.1及之前版本默认为true,之后版本为false-->
        <!--开启时，访问对象中一个懒对象属性时，将完全加载这个对象的所有懒对象属性-->
        <!--关闭时，按需加载对象属性-->
        <setting name="aggressiveLazyLoading" value="true"/>
        <!--开启mybatis二级缓存-->
        <setting name="cacheEnabled" value="true"/>
    </settings>

    <!--第二种定义全局变量方式-->
    <!--<properties>
        <property name="driver" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/devs"/>
        <property name="username" value="root"/>
        <property name="password" value="Liusiyuan1"/>
    </properties>-->

    <!--义别名-->
    <typeAliases>
        <typeAlias alias="dept" type="com.lsy.pojo.Department"></typeAlias>
    </typeAliases>

    <!--配置数据库连接环境，整合spring后environments配置将废除-->
    <environments default="development">

        <!--默认走第一个环境配置-->
        <!--development环境-->
        <environment id="development">
            <!--type有两个选项： JDBC、Manager-->
            <!--JDBC：直接使用jdbc的提交和回滚设施，他依赖从数据源获得的链接来管理实务作用域-->
            <!--Manager：这个配置几乎没做什么，他从不提交或回滚一个连接，而是让容器来管理实务的整个生命周期（如spring、jEE应用服务器的上下文）-->
            <transactionManager type="JDBC"/>

            <!--数据源配置，有三种数据源类型：UNPOOLED、POOLED、JNDI-->
            <!--UNPOOLED：mybatis会为每一个数据库操作创建一个新的链接，并关闭它。适用于只有小规模数量并发用户的简单应用程序上-->
            <!--POOLED：mybatis会创建一个数据库连接池，连接池的每一个连接将会被用作数据库操作，一旦操作完成会将此连接返回给连接池-->
            <!--JNDI：mybatis会从在应用服务器向配置好的JNDI数据源DataSource获取数据库连接-->
            <dataSource type="POOLED">
                <!--连接属性-->
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <!-- [:] 后为默认值，若要是用默认值需开启启用默认值，需在properties中定义-->
                <property name="username" value="${username:root}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>


        <!--可定义多个数据源-->
        <environment id="development-rep">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <!--连接属性-->
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <!-- [:] 后为默认值，若要是用默认值需开启启用默认值，需在properties中定义-->
                <property name="username" value="${username:root}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>

    </environments>
    <!--加载mapper映射文件-->
    <mappers>
        <!--一个一个的xml去找-->
        <mapper resource="com/lsy/pojo/DepartmentV1Mappper.xml"/>
        <mapper resource="com/lsy/mapper/DepartmentMapper.xml"/>
        <mapper resource="com/lsy/mapper/SubjectMapper.xml"/>
        <!--找某个包下的所有-->
        <!--        <package name="com.lsy.pojo"/>-->
    </mappers>
</configuration>